{"version":3,"sources":["Trivia.js","App.js","reportWebVitals.js","index.js"],"names":["Trivia","React","useState","data","setData","Input","setInput","match","setMatch","setAnswer","getQuestion","a","fetch","res","json","localStorage","setItem","answer","console","log","getItem","setTimeout","window","location","reload","useEffect","className","map","each","index","onChange","event","question","value","type","placeholder","styles","target","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAkFeA,MA/Ef,WACE,MAAwBC,IAAMC,SAAS,IAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BH,IAAMC,SAAS,IAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BL,IAAMC,SAAS,MAAzC,mBAAOK,EAAP,KAAcC,EAAd,KAGA,EAA4BP,IAAMC,SAAS,IAA3C,mBAAeO,GAAf,WACMC,EAAW,uCAAG,8BAAAC,EAAA,sEACFC,MAAM,kCADJ,cACdC,EADc,gBAEDA,EAAIC,OAFH,OAEdX,EAFc,OAGlBC,EAAQD,GACRY,aAAaC,QAAQ,SAAUb,EAAK,GAAGc,QACvCC,QAAQC,IAAIhB,EAAK,GAAGc,OAAO,UALT,2CAAH,qDAPD,4CAkBhB,4BAAAN,EAAA,sDACMM,EAASF,aAAaK,QAAQ,UAClCF,QAAQC,IAAId,EAAMY,EAAO,WAIvBT,EAHEH,IAAUY,EAGH,UAEA,aAEXI,YAAW,WACP,OAAOC,OAAOC,SAASC,WACtB,KAZP,2CAlBgB,wBAiChB,OAnBAvB,IAAMwB,WAAU,WACdf,MACA,IAkBA,qCACE,gCACE,oBAAIgB,UAAU,OAAd,yBACA,qBAAKA,UAAU,WAAf,SACE,yBAASA,UAAU,WAAnB,SAEGvB,EAAKwB,KAAI,SAACC,EAAMC,GACf,OACE,qBAEEC,SAAU,SAACC,GACTtB,EAAUmB,EAAKX,SAHnB,UAMGW,EAAKI,SANR,OACOH,UAYf,8BACE,uBACEI,MAAO5B,EACPqB,UAAU,QACVQ,KAAK,OACLC,YAAY,yBACZC,OAAO,YACPN,SAAU,SAACC,GACTvB,EAAS,MACTF,EAASyB,EAAMM,OAAOJ,eAK9B,gCACE,wBAAQK,QAtEE,2CAsEqBZ,UAAU,SAAzC,SACE,6CAGF,4BAAInB,W,MClEGgC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACC,cAAC,EAAD,OCMUc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.270a07b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Trivia.css\";\r\n\r\nfunction Trivia() {\r\n  const [data, setData] = React.useState([]);\r\n  const [Input, setInput] = React.useState([]);\r\n  const [match, setMatch] = React.useState(null);\r\n  // const [question.setQuestion] = React.useEffect([]);\r\n\r\n  const [answer, setAnswer] = React.useState([]);\r\n  const getQuestion = async () => {\r\n    let res = await fetch(\"https://jservice.io/api/random\");\r\n    let data = await res.json();\r\n    setData(data);\r\n    localStorage.setItem(\"answer\", data[0].answer);\r\n    console.log(data[0].answer,\"answer\")\r\n  };\r\n  React.useEffect(() => {\r\n    getQuestion();\r\n  },[]);\r\n\r\n  async function handleButton() {\r\n    let answer = localStorage.getItem(\"answer\");\r\n    console.log(Input,answer,\"Compare\")\r\n    if (Input === answer) {\r\n\r\n\r\n      setMatch(\"correct\");\r\n    } else {\r\n      setMatch(\"Incorrect\");\r\n    }\r\n    setTimeout(function () {\r\n        return window.location.reload();\r\n      }, 2000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1 className=\"Head\">Trivia Game</h1>\r\n        <div className=\"Question\">\r\n          <section className=\"Question\">\r\n           \r\n            {data.map((each, index) => {\r\n              return (\r\n                <h1\r\n                  key={index}\r\n                  onChange={(event) => {\r\n                    setAnswer(each.answer);\r\n                  }}\r\n                >\r\n                  {each.question} ?\r\n                </h1>\r\n              );\r\n            })}\r\n          </section>\r\n        </div>\r\n       \r\n        <div>\r\n          <input\r\n            value={Input}\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Write your Answer Here\"\r\n            styles=\"color:red\"\r\n            onChange={(event) => {\r\n              setMatch(null)\r\n              setInput(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button onClick={handleButton} className=\"button\">\r\n          <span>Submit </span>\r\n        </button>\r\n\r\n        <p>{match}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Trivia;","import Trivia from './Trivia'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Trivia/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}